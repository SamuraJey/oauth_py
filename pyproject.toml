[project]
name = "oauth-py"
version = "0.1.0"
description = ""
authors = [{ name = "SamuraJ", email = "cergeypro703@gmail.com" }]
readme = "README.md"
requires-python = ">=3.13, <4"
dependencies = [
    "authlib (>=1.4.0,<2.0.0)",
    "mypy (>=1.14.1,<2.0.0)",
    "pydantic (>=2.10.5,<3.0.0)",
    "pydantic-core (>=2.27.2,<3.0.0)",
    "flask (>=3.1.0,<4.0.0)",
    "pycouchdb (>=1.16.0,<2.0.0)",
    "waitress (>=3.0.2,<4.0.0)",
    "requests (>=2.32.3,<3.0.0)",
    "pydantic-settings (>=2.7.1,<3.0.0)",
    "ruff (>=0.1.0, <1.0.0)",
    "pytest (>=8.0.0,<9.0.0)",
    "requests-mock (>=1.12.1,<2.0.0)",
    "jinja2 (>=3.1.6,<4.0.0)",
    "pre-commit (>=4.2.0,<5.0.0)",
]

[tool.poetry]
package-mode = false


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
plugins = "pydantic.mypy"
follow_untyped_imports = true
ignore_missing_imports = true
warn_unreachable = true


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "logs",
]

line-length = 180
indent-width = 4
target-version = "py313"

[tool.ruff.lint]

# E - pycodestyle F - Pyflakes UP - pyupgrade B - flake8-bugbear SIM - flake8-simplify I - isort
# N - flake8-annotations A - flake8-annotations T20 - flake8-tidy-imports ERA - flake8-eradicate
# C4 - flake8-comprehensions TID - flake8-tidy-imports PERF - flake8-perf
select = [
    "E",
    "F",
    "UP",
    "B",
    "SIM",
    "I",
    "N",
    "A",
    "T20",
    "ERA",
    "C4",
    "TID",
    "PERF",
]
ignore = ["SIM108"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

docstring-code-format = false

[tool.pytest.ini_options]
pythonpath = "src"
addopts = ["--import-mode=importlib"]
